from Crypto.Cipher import AES   # PyCryptodome implementation https://pypi.org/project/pycryptodome/
from Crypto.Random import get_random_bytes

"""
from Crypto.Cipher import AES   # PyCryptodome implementation https://pypi.org/project/pycryptodome/
from Crypto.Random import get_random_bytes
"""
"""
Encrypt
Takes in the sender's email address (string), the picture (byte array), and the aes private key (128 bit == 16 byte string)
Outputs the cipher text with header information
"""
def encrypt(email, pic, aesKey):
    debug = 0
    
    byteEmail = bytes(email, 'utf-16')
    cipher = AES.new(aesKey, AES.MODE_EAX)     # creates a cipher object that will do the scrambling
    nonce = cipher.nonce    # nonce is like a secret code used to verify that there was no tampering. required by the imported AES to work
    # yields the encrypted image in byte array form and tag (needed for the imported AES implementation)
    ciphertext, tag = cipher.encrypt_and_digest(pic)


    # once we encrypt, append the email address, tag, and nonce to the front
    # don't pad the sizes since they all ended up being 6 bytes
    sizEmail = len(byteEmail)
    lenByteSizE = len(bytes(str(sizEmail), 'utf-16'))
    print(f'the email byte array is size {sizEmail}. the size of the header as a string will be {len(str(sizEmail))}. in byte form, it is {lenByteSizE} bytes') if (debug == 1) else print('', end='')
    print(f'byte email is: {byteEmail}') if (debug == 1) else print('', end='')
    sizTag = len(tag)
    lenByteSizT = len(bytes(str(sizTag), 'utf-16'))
    print(f'the email byte array is size {sizTag}. the size of the header as a string will be {len(str(sizTag))}. in byte form, it is {lenByteSizT} bytes') if (debug == 1) else print('', end='')
    print(f'tag is: {tag}') if (debug == 1) else print('', end='')
    sizNonce = len(nonce)
    lenByteSizN = len(bytes(str(sizNonce), 'utf-16'))
    print(f'the email byte array is size {sizNonce}. the size of the header as a string will be {len(str(sizNonce))}. in byte form, it is {lenByteSizN} bytes') if (debug == 1) else print('', end='')
    print(f'nonce is: {nonce}') if (debug == 1) else print('', end='')
    
    # convert the sizes into byte arrays, to properly append to encrypted byte array
    #print(f'\tOriginal ciphertext is {ciphertext}')  if (debug == 1) else print('', end='')
    ciphertext = bytes(str(sizEmail), 'utf-16') + byteEmail + bytes(str(sizTag), 'utf-16') + tag + bytes(str(sizNonce), 'utf-16') + nonce + ciphertext
    
    return ciphertext

"""
Pure decryption
Takes the encrypted string after the header info was extracted. the nonce and tag come from that extraction
the extraction will be done by the client, since that includes the email address to be used to get the DH public key which will eventually lead to the AES key
"""
def decrypt(encStr, aesKey, foundNonce, tag):

    cipher = AES.new(aesKey, AES.MODE_EAX, foundNonce)
    
    return cipher.decrypt_and_verify(encStr, tag)

"""
Bytes to Int
Given a byte array, decode to string then convert to int
"""

def bytesToInt(byteStr):
    debug = 0
    print(f'length of the byte string is {len(byteStr)}') if (debug == 1) else print('', end='')
    print(f'trimmed fella is {byteStr}') if (debug == 1) else print('', end='')
    stri = byteStr.decode('utf-16')
    return int(stri)

"""
Extract Header

"""

def extractHead(byteStr):
    debug = 0
    # every size is 6 bytes long.
    sizEmail = bytesToInt(byteStr[0:6])
    print(f'found email size is: {sizEmail}') if (debug == 1) else print('', end='')
    foundEmail = bytearray(b'')

    # after the email header and email, you have the tag header (6 bytes) and tag
    sizTag = bytesToInt(byteStr[6 + sizEmail: 12 + sizEmail])
    print(f'found tag size is: {sizTag}') if (debug == 1) else print('', end='')
    foundTag = bytearray(b'')

    sizNonce = bytesToInt(byteStr[12 + sizEmail + sizTag: 18 + sizEmail + sizTag])
    print(f'found nonce size is: {sizNonce}') if (debug == 1) else print('', end='')
    foundNonce = bytearray(b'')

    realDec = bytearray(b'')

    for i in range(sizEmail):
        foundEmail.append(byteStr[6 + i])
    print(f'found email is: {foundEmail}') if (debug == 1) else print('', end='')
    for j in range(sizTag):
        foundTag.append(byteStr[12 + sizEmail + j])
    print(f'found tag is: {foundTag}') if (debug == 1) else print('', end='')
    for k in range(sizNonce):
        foundNonce.append(byteStr[18 + sizEmail + sizTag + k])
    print(f'found nonce is: {foundNonce}') if (debug == 1) else print('', end='')
    for l in range(18 + sizEmail + sizTag + sizNonce, len(byteStr)):
        realDec.append(byteStr[l])
    # print(f'\trealDec is {realDec}')

    return foundEmail, foundTag, foundNonce, realDec
    
# debug stuff
if __name__ == "__main__":
    debug = 0
    # an image we converted to a byte str
    imgStr = ''
    img = bytes(imgStr, 'utf-16')
    email = 'goatlover99@gmail.com'
    private = get_random_bytes(16)        # generates random 16 byte key (AES-128). real key would have been received from DH 
    print(f'generated private key is: {private}') if (debug == 1) else print('', end='')
    
    # ct, t, nonce, siz = encrypt(email, img, private)
    ct = encrypt(email, img, private)
    for i in range(3):
        with open('encrypted\encryptedImg' + str(i) + '.txt', 'wb') as a:
            a.write(ct)
            
    #print(f'tag is {t}') if (debug == 1) else print('', end='')
    #print(f'cipher text is {ct}') if (debug == 1) else print('', end='')

    foundEmail, foundTag, foundNonce, realDec = extractHead(ct)
    
    #uses found sender email address to get the sender's public key, to then calc the final DH key
    sendEmail = foundEmail.decode('utf-16')
    print(f'sender email is: {sendEmail}') if (debug == 1) else print('', end='')

    # final DH key goes through key decoder to get the AES key (represented by private)

    decrypted = decrypt(realDec, private, foundNonce, foundTag)
    
    if (decrypted == img):
        print('***********************\nDecryption successful\n***********************')
        print(f'decrypted image byte array is: {decrypted}') if (debug == 1) else print('', end='')
    else:
        print('bruh')
 
    i = 0
    ciph = b''
    folder = 'encrypted'
    with open(folder + '\encryptedImg' + str(i) + '.txt', 'rb') as a:
        ciph = a.read()
    foundEmail2, foundTag2, foundNonce2, realDec2 = extractHead(ciph)
    decrypted2 = decrypt(realDec2, private, foundNonce2, foundTag2)
    if (decrypted == decrypted2):
        print("yeehaw")